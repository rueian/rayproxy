// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: src/ray/protobuf/reporter.proto

package protobuf

import (
	v1 "github.com/census-instrumentation/opencensus-proto/gen-go/metrics/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetProfilingStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PID of the worker process.
	Pid uint32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// Duration of the profiling in seconds.
	Duration int32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *GetProfilingStatsRequest) Reset() {
	*x = GetProfilingStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilingStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilingStatsRequest) ProtoMessage() {}

func (x *GetProfilingStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilingStatsRequest.ProtoReflect.Descriptor instead.
func (*GetProfilingStatsRequest) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{0}
}

func (x *GetProfilingStatsRequest) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GetProfilingStatsRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type GetProfilingStatsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Profiling stats.
	ProfilingStats string `protobuf:"bytes,1,opt,name=profiling_stats,json=profilingStats,proto3" json:"profiling_stats,omitempty"`
	// Standard output of the profiler process.
	StdOut string `protobuf:"bytes,2,opt,name=std_out,json=stdOut,proto3" json:"std_out,omitempty"`
	// Standard error of the profiler process.
	StdErr string `protobuf:"bytes,3,opt,name=std_err,json=stdErr,proto3" json:"std_err,omitempty"`
}

func (x *GetProfilingStatsReply) Reset() {
	*x = GetProfilingStatsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilingStatsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilingStatsReply) ProtoMessage() {}

func (x *GetProfilingStatsReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilingStatsReply.ProtoReflect.Descriptor instead.
func (*GetProfilingStatsReply) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{1}
}

func (x *GetProfilingStatsReply) GetProfilingStats() string {
	if x != nil {
		return x.ProfilingStats
	}
	return ""
}

func (x *GetProfilingStatsReply) GetStdOut() string {
	if x != nil {
		return x.StdOut
	}
	return ""
}

func (x *GetProfilingStatsReply) GetStdErr() string {
	if x != nil {
		return x.StdErr
	}
	return ""
}

type ReportMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricsPoints []*MetricPoint `protobuf:"bytes,1,rep,name=metrics_points,json=metricsPoints,proto3" json:"metrics_points,omitempty"`
}

func (x *ReportMetricsRequest) Reset() {
	*x = ReportMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMetricsRequest) ProtoMessage() {}

func (x *ReportMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMetricsRequest.ProtoReflect.Descriptor instead.
func (*ReportMetricsRequest) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{2}
}

func (x *ReportMetricsRequest) GetMetricsPoints() []*MetricPoint {
	if x != nil {
		return x.MetricsPoints
	}
	return nil
}

type ReportMetricsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetrcsDescriptionRequired bool `protobuf:"varint,1,opt,name=metrcs_description_required,json=metrcsDescriptionRequired,proto3" json:"metrcs_description_required,omitempty"`
}

func (x *ReportMetricsReply) Reset() {
	*x = ReportMetricsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMetricsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMetricsReply) ProtoMessage() {}

func (x *ReportMetricsReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMetricsReply.ProtoReflect.Descriptor instead.
func (*ReportMetricsReply) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{3}
}

func (x *ReportMetricsReply) GetMetrcsDescriptionRequired() bool {
	if x != nil {
		return x.MetrcsDescriptionRequired
	}
	return false
}

type ReportOCMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*v1.Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ReportOCMetricsRequest) Reset() {
	*x = ReportOCMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportOCMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportOCMetricsRequest) ProtoMessage() {}

func (x *ReportOCMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportOCMetricsRequest.ProtoReflect.Descriptor instead.
func (*ReportOCMetricsRequest) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{4}
}

func (x *ReportOCMetricsRequest) GetMetrics() []*v1.Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ReportOCMetricsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportOCMetricsReply) Reset() {
	*x = ReportOCMetricsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportOCMetricsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportOCMetricsReply) ProtoMessage() {}

func (x *ReportOCMetricsReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportOCMetricsReply.ProtoReflect.Descriptor instead.
func (*ReportOCMetricsReply) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{5}
}

// Resource usage reported by the node reporter.
type NodeResourceUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node resource usage in serialized json.
	// TODO: add schema for the subfields, e.g.
	// https://github.com/ray-project/ray/blob/e54d3117a40c20ca5441d38ffc72b908bc1b0609/dashboard/modules/reporter/reporter_agent.py#L330-L347
	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *NodeResourceUsage) Reset() {
	*x = NodeResourceUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResourceUsage) ProtoMessage() {}

func (x *NodeResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResourceUsage.ProtoReflect.Descriptor instead.
func (*NodeResourceUsage) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{6}
}

func (x *NodeResourceUsage) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type StreamLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// File name of the log file
	LogFileName string `protobuf:"bytes,1,opt,name=log_file_name,json=logFileName,proto3" json:"log_file_name,omitempty"`
	// Keeps stream alive perpertually if true, else terminates on EOF
	KeepAlive bool `protobuf:"varint,2,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`
	// Number of lines to tail from the log file initially
	// -1 indicates to fetch the whole file
	Lines *int32 `protobuf:"varint,3,opt,name=lines,proto3,oneof" json:"lines,omitempty"`
	// if keep_alive is true, this indicates how frequently to poll the
	// log file for new lines
	Interval *float32 `protobuf:"fixed32,4,opt,name=interval,proto3,oneof" json:"interval,omitempty"`
}

func (x *StreamLogRequest) Reset() {
	*x = StreamLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogRequest) ProtoMessage() {}

func (x *StreamLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogRequest.ProtoReflect.Descriptor instead.
func (*StreamLogRequest) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{7}
}

func (x *StreamLogRequest) GetLogFileName() string {
	if x != nil {
		return x.LogFileName
	}
	return ""
}

func (x *StreamLogRequest) GetKeepAlive() bool {
	if x != nil {
		return x.KeepAlive
	}
	return false
}

func (x *StreamLogRequest) GetLines() int32 {
	if x != nil && x.Lines != nil {
		return *x.Lines
	}
	return 0
}

func (x *StreamLogRequest) GetInterval() float32 {
	if x != nil && x.Interval != nil {
		return *x.Interval
	}
	return 0
}

type StreamLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The raw bytes of the log file chunk
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StreamLogReply) Reset() {
	*x = StreamLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogReply) ProtoMessage() {}

func (x *StreamLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogReply.ProtoReflect.Descriptor instead.
func (*StreamLogReply) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{8}
}

func (x *StreamLogReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLogsRequest) Reset() {
	*x = ListLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogsRequest) ProtoMessage() {}

func (x *ListLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogsRequest.ProtoReflect.Descriptor instead.
func (*ListLogsRequest) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{9}
}

type ListLogsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The file names of all the log files in this node's
	// log directory
	LogFiles []string `protobuf:"bytes,1,rep,name=log_files,json=logFiles,proto3" json:"log_files,omitempty"`
}

func (x *ListLogsReply) Reset() {
	*x = ListLogsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_reporter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogsReply) ProtoMessage() {}

func (x *ListLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_reporter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogsReply.ProtoReflect.Descriptor instead.
func (*ListLogsReply) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_reporter_proto_rawDescGZIP(), []int{10}
}

func (x *ListLogsReply) GetLogFiles() []string {
	if x != nil {
		return x.LogFiles
	}
	return nil
}

var File_src_ray_protobuf_reporter_proto protoreflect.FileDescriptor

var file_src_ray_protobuf_reporter_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x72, 0x63, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x1a, 0x29, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x72, 0x63, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74,
	0x64, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64,
	0x45, 0x72, 0x72, 0x22, 0x53, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e,
	0x0a, 0x1b, 0x6d, 0x65, 0x74, 0x72, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x19, 0x6d, 0x65, 0x74, 0x72, 0x63, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x57,
	0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4f, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x27, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x22, 0x24, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x8a, 0x02, 0x0a, 0x0f, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x51, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x43,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1f, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x8d, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x18, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72,
	0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f,
	0x67, 0x12, 0x19, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72,
	0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x42, 0x89, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e,
	0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x75, 0x65, 0x69, 0x61, 0x6e, 0x2f, 0x72, 0x61, 0x79, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x52, 0x52, 0x58, 0xaa, 0x02,
	0x07, 0x52, 0x61, 0x79, 0x2e, 0x52, 0x70, 0x63, 0xca, 0x02, 0x07, 0x52, 0x61, 0x79, 0x5c, 0x52,
	0x70, 0x63, 0xe2, 0x02, 0x13, 0x52, 0x61, 0x79, 0x5c, 0x52, 0x70, 0x63, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x52, 0x61, 0x79, 0x3a, 0x3a,
	0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_ray_protobuf_reporter_proto_rawDescOnce sync.Once
	file_src_ray_protobuf_reporter_proto_rawDescData = file_src_ray_protobuf_reporter_proto_rawDesc
)

func file_src_ray_protobuf_reporter_proto_rawDescGZIP() []byte {
	file_src_ray_protobuf_reporter_proto_rawDescOnce.Do(func() {
		file_src_ray_protobuf_reporter_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_ray_protobuf_reporter_proto_rawDescData)
	})
	return file_src_ray_protobuf_reporter_proto_rawDescData
}

var file_src_ray_protobuf_reporter_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_src_ray_protobuf_reporter_proto_goTypes = []interface{}{
	(*GetProfilingStatsRequest)(nil), // 0: ray.rpc.GetProfilingStatsRequest
	(*GetProfilingStatsReply)(nil),   // 1: ray.rpc.GetProfilingStatsReply
	(*ReportMetricsRequest)(nil),     // 2: ray.rpc.ReportMetricsRequest
	(*ReportMetricsReply)(nil),       // 3: ray.rpc.ReportMetricsReply
	(*ReportOCMetricsRequest)(nil),   // 4: ray.rpc.ReportOCMetricsRequest
	(*ReportOCMetricsReply)(nil),     // 5: ray.rpc.ReportOCMetricsReply
	(*NodeResourceUsage)(nil),        // 6: ray.rpc.NodeResourceUsage
	(*StreamLogRequest)(nil),         // 7: ray.rpc.StreamLogRequest
	(*StreamLogReply)(nil),           // 8: ray.rpc.StreamLogReply
	(*ListLogsRequest)(nil),          // 9: ray.rpc.ListLogsRequest
	(*ListLogsReply)(nil),            // 10: ray.rpc.ListLogsReply
	(*MetricPoint)(nil),              // 11: ray.rpc.MetricPoint
	(*v1.Metric)(nil),                // 12: opencensus.proto.metrics.v1.Metric
}
var file_src_ray_protobuf_reporter_proto_depIdxs = []int32{
	11, // 0: ray.rpc.ReportMetricsRequest.metrics_points:type_name -> ray.rpc.MetricPoint
	12, // 1: ray.rpc.ReportOCMetricsRequest.metrics:type_name -> opencensus.proto.metrics.v1.Metric
	0,  // 2: ray.rpc.ReporterService.GetProfilingStats:input_type -> ray.rpc.GetProfilingStatsRequest
	2,  // 3: ray.rpc.ReporterService.ReportMetrics:input_type -> ray.rpc.ReportMetricsRequest
	4,  // 4: ray.rpc.ReporterService.ReportOCMetrics:input_type -> ray.rpc.ReportOCMetricsRequest
	9,  // 5: ray.rpc.LogService.ListLogs:input_type -> ray.rpc.ListLogsRequest
	7,  // 6: ray.rpc.LogService.StreamLog:input_type -> ray.rpc.StreamLogRequest
	1,  // 7: ray.rpc.ReporterService.GetProfilingStats:output_type -> ray.rpc.GetProfilingStatsReply
	3,  // 8: ray.rpc.ReporterService.ReportMetrics:output_type -> ray.rpc.ReportMetricsReply
	5,  // 9: ray.rpc.ReporterService.ReportOCMetrics:output_type -> ray.rpc.ReportOCMetricsReply
	10, // 10: ray.rpc.LogService.ListLogs:output_type -> ray.rpc.ListLogsReply
	8,  // 11: ray.rpc.LogService.StreamLog:output_type -> ray.rpc.StreamLogReply
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_src_ray_protobuf_reporter_proto_init() }
func file_src_ray_protobuf_reporter_proto_init() {
	if File_src_ray_protobuf_reporter_proto != nil {
		return
	}
	file_src_ray_protobuf_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_src_ray_protobuf_reporter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilingStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilingStatsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportMetricsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportOCMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportOCMetricsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeResourceUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_reporter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_src_ray_protobuf_reporter_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_ray_protobuf_reporter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_src_ray_protobuf_reporter_proto_goTypes,
		DependencyIndexes: file_src_ray_protobuf_reporter_proto_depIdxs,
		MessageInfos:      file_src_ray_protobuf_reporter_proto_msgTypes,
	}.Build()
	File_src_ray_protobuf_reporter_proto = out.File
	file_src_ray_protobuf_reporter_proto_rawDesc = nil
	file_src_ray_protobuf_reporter_proto_goTypes = nil
	file_src_ray_protobuf_reporter_proto_depIdxs = nil
}
