// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: src/ray/protobuf/runtime_env_agent.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrCreateRuntimeEnvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedRuntimeEnv string            `protobuf:"bytes,1,opt,name=serialized_runtime_env,json=serializedRuntimeEnv,proto3" json:"serialized_runtime_env,omitempty"`
	RuntimeEnvConfig     *RuntimeEnvConfig `protobuf:"bytes,2,opt,name=runtime_env_config,json=runtimeEnvConfig,proto3" json:"runtime_env_config,omitempty"`
	JobId                []byte            `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Serialized allocated resource instances. Key is resource type, value is allocated
	// instances. For example,{"CPU":20000,"memory":40000,"GPU":[10000, 10000]} means 2 cpu
	// cores, 2 Gi memory, GPU 0 and GPU 1.
	SerializedAllocatedResourceInstances string `protobuf:"bytes,4,opt,name=serialized_allocated_resource_instances,json=serializedAllocatedResourceInstances,proto3" json:"serialized_allocated_resource_instances,omitempty"`
	SourceProcess                        string `protobuf:"bytes,5,opt,name=source_process,json=sourceProcess,proto3" json:"source_process,omitempty"`
}

func (x *GetOrCreateRuntimeEnvRequest) Reset() {
	*x = GetOrCreateRuntimeEnvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateRuntimeEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateRuntimeEnvRequest) ProtoMessage() {}

func (x *GetOrCreateRuntimeEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateRuntimeEnvRequest.ProtoReflect.Descriptor instead.
func (*GetOrCreateRuntimeEnvRequest) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_runtime_env_agent_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrCreateRuntimeEnvRequest) GetSerializedRuntimeEnv() string {
	if x != nil {
		return x.SerializedRuntimeEnv
	}
	return ""
}

func (x *GetOrCreateRuntimeEnvRequest) GetRuntimeEnvConfig() *RuntimeEnvConfig {
	if x != nil {
		return x.RuntimeEnvConfig
	}
	return nil
}

func (x *GetOrCreateRuntimeEnvRequest) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *GetOrCreateRuntimeEnvRequest) GetSerializedAllocatedResourceInstances() string {
	if x != nil {
		return x.SerializedAllocatedResourceInstances
	}
	return ""
}

func (x *GetOrCreateRuntimeEnvRequest) GetSourceProcess() string {
	if x != nil {
		return x.SourceProcess
	}
	return ""
}

type GetOrCreateRuntimeEnvReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                      AgentRpcStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ray.rpc.AgentRpcStatus" json:"status,omitempty"`
	ErrorMessage                string         `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	SerializedRuntimeEnvContext string         `protobuf:"bytes,3,opt,name=serialized_runtime_env_context,json=serializedRuntimeEnvContext,proto3" json:"serialized_runtime_env_context,omitempty"`
}

func (x *GetOrCreateRuntimeEnvReply) Reset() {
	*x = GetOrCreateRuntimeEnvReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateRuntimeEnvReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateRuntimeEnvReply) ProtoMessage() {}

func (x *GetOrCreateRuntimeEnvReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateRuntimeEnvReply.ProtoReflect.Descriptor instead.
func (*GetOrCreateRuntimeEnvReply) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_runtime_env_agent_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrCreateRuntimeEnvReply) GetStatus() AgentRpcStatus {
	if x != nil {
		return x.Status
	}
	return AgentRpcStatus_AGENT_RPC_STATUS_OK
}

func (x *GetOrCreateRuntimeEnvReply) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetOrCreateRuntimeEnvReply) GetSerializedRuntimeEnvContext() string {
	if x != nil {
		return x.SerializedRuntimeEnvContext
	}
	return ""
}

type DeleteRuntimeEnvIfPossibleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedRuntimeEnv string `protobuf:"bytes,1,opt,name=serialized_runtime_env,json=serializedRuntimeEnv,proto3" json:"serialized_runtime_env,omitempty"`
	SourceProcess        string `protobuf:"bytes,2,opt,name=source_process,json=sourceProcess,proto3" json:"source_process,omitempty"`
}

func (x *DeleteRuntimeEnvIfPossibleRequest) Reset() {
	*x = DeleteRuntimeEnvIfPossibleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuntimeEnvIfPossibleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuntimeEnvIfPossibleRequest) ProtoMessage() {}

func (x *DeleteRuntimeEnvIfPossibleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuntimeEnvIfPossibleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuntimeEnvIfPossibleRequest) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_runtime_env_agent_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRuntimeEnvIfPossibleRequest) GetSerializedRuntimeEnv() string {
	if x != nil {
		return x.SerializedRuntimeEnv
	}
	return ""
}

func (x *DeleteRuntimeEnvIfPossibleRequest) GetSourceProcess() string {
	if x != nil {
		return x.SourceProcess
	}
	return ""
}

type DeleteRuntimeEnvIfPossibleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       AgentRpcStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ray.rpc.AgentRpcStatus" json:"status,omitempty"`
	ErrorMessage string         `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *DeleteRuntimeEnvIfPossibleReply) Reset() {
	*x = DeleteRuntimeEnvIfPossibleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuntimeEnvIfPossibleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuntimeEnvIfPossibleReply) ProtoMessage() {}

func (x *DeleteRuntimeEnvIfPossibleReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuntimeEnvIfPossibleReply.ProtoReflect.Descriptor instead.
func (*DeleteRuntimeEnvIfPossibleReply) Descriptor() ([]byte, []int) {
	return file_src_ray_protobuf_runtime_env_agent_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRuntimeEnvIfPossibleReply) GetStatus() AgentRpcStatus {
	if x != nil {
		return x.Status
	}
	return AgentRpcStatus_AGENT_RPC_STATUS_OK
}

func (x *DeleteRuntimeEnvIfPossibleReply) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_src_ray_protobuf_runtime_env_agent_proto protoreflect.FileDescriptor

var file_src_ray_protobuf_runtime_env_agent_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x72, 0x63, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x61, 0x79, 0x2e,
	0x72, 0x70, 0x63, 0x1a, 0x29, 0x73, 0x72, 0x63, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e,
	0x76, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x73, 0x72, 0x63, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x47, 0x0a, 0x12, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x10, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x27, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x24, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x6e, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43,
	0x0a, 0x1e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x49, 0x66, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x77, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x49, 0x66, 0x50, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x61, 0x79, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0xec, 0x01, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x25,
	0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x72, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x49, 0x66,
	0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x6e, 0x76, 0x49, 0x66, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x49,
	0x66, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x90,
	0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x14,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x75, 0x65, 0x69, 0x61, 0x6e, 0x2f, 0x72, 0x61, 0x79, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x52, 0x52, 0x58, 0xaa, 0x02, 0x07, 0x52,
	0x61, 0x79, 0x2e, 0x52, 0x70, 0x63, 0xca, 0x02, 0x07, 0x52, 0x61, 0x79, 0x5c, 0x52, 0x70, 0x63,
	0xe2, 0x02, 0x13, 0x52, 0x61, 0x79, 0x5c, 0x52, 0x70, 0x63, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x52, 0x61, 0x79, 0x3a, 0x3a, 0x52, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_ray_protobuf_runtime_env_agent_proto_rawDescOnce sync.Once
	file_src_ray_protobuf_runtime_env_agent_proto_rawDescData = file_src_ray_protobuf_runtime_env_agent_proto_rawDesc
)

func file_src_ray_protobuf_runtime_env_agent_proto_rawDescGZIP() []byte {
	file_src_ray_protobuf_runtime_env_agent_proto_rawDescOnce.Do(func() {
		file_src_ray_protobuf_runtime_env_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_ray_protobuf_runtime_env_agent_proto_rawDescData)
	})
	return file_src_ray_protobuf_runtime_env_agent_proto_rawDescData
}

var file_src_ray_protobuf_runtime_env_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_src_ray_protobuf_runtime_env_agent_proto_goTypes = []interface{}{
	(*GetOrCreateRuntimeEnvRequest)(nil),      // 0: ray.rpc.GetOrCreateRuntimeEnvRequest
	(*GetOrCreateRuntimeEnvReply)(nil),        // 1: ray.rpc.GetOrCreateRuntimeEnvReply
	(*DeleteRuntimeEnvIfPossibleRequest)(nil), // 2: ray.rpc.DeleteRuntimeEnvIfPossibleRequest
	(*DeleteRuntimeEnvIfPossibleReply)(nil),   // 3: ray.rpc.DeleteRuntimeEnvIfPossibleReply
	(*RuntimeEnvConfig)(nil),                  // 4: ray.rpc.RuntimeEnvConfig
	(AgentRpcStatus)(0),                       // 5: ray.rpc.AgentRpcStatus
}
var file_src_ray_protobuf_runtime_env_agent_proto_depIdxs = []int32{
	4, // 0: ray.rpc.GetOrCreateRuntimeEnvRequest.runtime_env_config:type_name -> ray.rpc.RuntimeEnvConfig
	5, // 1: ray.rpc.GetOrCreateRuntimeEnvReply.status:type_name -> ray.rpc.AgentRpcStatus
	5, // 2: ray.rpc.DeleteRuntimeEnvIfPossibleReply.status:type_name -> ray.rpc.AgentRpcStatus
	0, // 3: ray.rpc.RuntimeEnvService.GetOrCreateRuntimeEnv:input_type -> ray.rpc.GetOrCreateRuntimeEnvRequest
	2, // 4: ray.rpc.RuntimeEnvService.DeleteRuntimeEnvIfPossible:input_type -> ray.rpc.DeleteRuntimeEnvIfPossibleRequest
	1, // 5: ray.rpc.RuntimeEnvService.GetOrCreateRuntimeEnv:output_type -> ray.rpc.GetOrCreateRuntimeEnvReply
	3, // 6: ray.rpc.RuntimeEnvService.DeleteRuntimeEnvIfPossible:output_type -> ray.rpc.DeleteRuntimeEnvIfPossibleReply
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_src_ray_protobuf_runtime_env_agent_proto_init() }
func file_src_ray_protobuf_runtime_env_agent_proto_init() {
	if File_src_ray_protobuf_runtime_env_agent_proto != nil {
		return
	}
	file_src_ray_protobuf_runtime_env_common_proto_init()
	file_src_ray_protobuf_agent_manager_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateRuntimeEnvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateRuntimeEnvReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuntimeEnvIfPossibleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_ray_protobuf_runtime_env_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuntimeEnvIfPossibleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_ray_protobuf_runtime_env_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_ray_protobuf_runtime_env_agent_proto_goTypes,
		DependencyIndexes: file_src_ray_protobuf_runtime_env_agent_proto_depIdxs,
		MessageInfos:      file_src_ray_protobuf_runtime_env_agent_proto_msgTypes,
	}.Build()
	File_src_ray_protobuf_runtime_env_agent_proto = out.File
	file_src_ray_protobuf_runtime_env_agent_proto_rawDesc = nil
	file_src_ray_protobuf_runtime_env_agent_proto_goTypes = nil
	file_src_ray_protobuf_runtime_env_agent_proto_depIdxs = nil
}
