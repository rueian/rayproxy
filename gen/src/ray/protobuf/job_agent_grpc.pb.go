// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: src/ray/protobuf/job_agent.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobAgentServiceClient is the client API for JobAgentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobAgentServiceClient interface {
	// Initialize job env.
	InitializeJobEnv(ctx context.Context, in *InitializeJobEnvRequest, opts ...grpc.CallOption) (*InitializeJobEnvReply, error)
}

type jobAgentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobAgentServiceClient(cc grpc.ClientConnInterface) JobAgentServiceClient {
	return &jobAgentServiceClient{cc}
}

func (c *jobAgentServiceClient) InitializeJobEnv(ctx context.Context, in *InitializeJobEnvRequest, opts ...grpc.CallOption) (*InitializeJobEnvReply, error) {
	out := new(InitializeJobEnvReply)
	err := c.cc.Invoke(ctx, "/ray.rpc.JobAgentService/InitializeJobEnv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobAgentServiceServer is the server API for JobAgentService service.
// All implementations should embed UnimplementedJobAgentServiceServer
// for forward compatibility
type JobAgentServiceServer interface {
	// Initialize job env.
	InitializeJobEnv(context.Context, *InitializeJobEnvRequest) (*InitializeJobEnvReply, error)
}

// UnimplementedJobAgentServiceServer should be embedded to have forward compatible implementations.
type UnimplementedJobAgentServiceServer struct {
}

func (UnimplementedJobAgentServiceServer) InitializeJobEnv(context.Context, *InitializeJobEnvRequest) (*InitializeJobEnvReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitializeJobEnv not implemented")
}

// UnsafeJobAgentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobAgentServiceServer will
// result in compilation errors.
type UnsafeJobAgentServiceServer interface {
	mustEmbedUnimplementedJobAgentServiceServer()
}

func RegisterJobAgentServiceServer(s grpc.ServiceRegistrar, srv JobAgentServiceServer) {
	s.RegisterService(&JobAgentService_ServiceDesc, srv)
}

func _JobAgentService_InitializeJobEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeJobEnvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobAgentServiceServer).InitializeJobEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ray.rpc.JobAgentService/InitializeJobEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobAgentServiceServer).InitializeJobEnv(ctx, req.(*InitializeJobEnvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobAgentService_ServiceDesc is the grpc.ServiceDesc for JobAgentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobAgentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ray.rpc.JobAgentService",
	HandlerType: (*JobAgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitializeJobEnv",
			Handler:    _JobAgentService_InitializeJobEnv_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/ray/protobuf/job_agent.proto",
}
